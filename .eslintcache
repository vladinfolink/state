[{"/media/v/New Volume/NET/chubby-cheeks/src/App.tsx":"1","/media/v/New Volume/NET/chubby-cheeks/src/Fetch/Fetch.js":"2","/media/v/New Volume/NET/chubby-cheeks/src/Fetch/Apps.js":"3"},{"size":190,"mtime":1608104581582,"results":"4","hashOfConfig":"5"},{"size":1511,"mtime":1608296042427,"results":"6","hashOfConfig":"5"},{"size":1281,"mtime":1608295039169,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"qy5tz3",{"filePath":"10","messages":"11","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"12"},{"filePath":"13","messages":"14","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/media/v/New Volume/NET/chubby-cheeks/src/App.tsx",[],"/media/v/New Volume/NET/chubby-cheeks/src/Fetch/Fetch.js",["15","16"],"import React, { createContext, useContext, useReducer } from \"react\";\n\nimport axios from \"axios\";\n\nimport { skipKey, getUniqString } from \"./util.ts\";\n\n// dalea grele:\nexport const StateContext = createContext();\n\nconst initialState = { cache: {} };\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"SET_REQUEST_DATA\":\n      return {\n        ...state,\n        cache: {\n          ...state.cache,\n          [action.uid]: action.payload,\n        },\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const StateProvider = ({ children }) => (\n  <StateContext.Provider\n    value={{\n      cache: useReducer(reducer, initialState),\n      client: {}\n    }}\n  >\n    {children}\n  </StateContext.Provider>\n);\n\nexport const useRequest = () => {\n  const [{ cache }, dispatch] = useContext(StateContext).cache;\n  return { cache, dispatch };\n};\n\nasync function makeStore(props) {\n  const { cache, dispatch } = this;\n  const { endpoint, method, params, onlyData } = props;\n  const uid = getUniqString({ ...props });\n\n  console.log({ cache });\n\n  if (cache[uid]) return cache[uid];\n  const response = await axios[method](endpoint);\n\n  dispatch({\n    uid,\n    type: \"SET_REQUEST_DATA\",\n    payload: {\n      ...(onlyData ? { data: response.data } : { response }),\n    },\n  });\n\n  return onlyData ? { data: response.data } : { response };\n}\n\nexport function useFetch() {\n  const { cache, dispatch } = useRequest();\n\n  return {\n    request: makeStore.bind({\n      cache,\n      dispatch,\n    }),\n  };\n}\n","/media/v/New Volume/NET/chubby-cheeks/src/Fetch/Apps.js",["17","18"],{"ruleId":"19","severity":1,"message":"20","line":5,"column":10,"nodeType":"21","messageId":"22","endLine":5,"endColumn":17},{"ruleId":"19","severity":1,"message":"23","line":46,"column":29,"nodeType":"21","messageId":"22","endLine":46,"endColumn":35},{"ruleId":"19","severity":1,"message":"24","line":21,"column":11,"nodeType":"21","messageId":"22","endLine":21,"endColumn":14},{"ruleId":"25","severity":1,"message":"26","line":29,"column":6,"nodeType":"27","endLine":29,"endColumn":8,"suggestions":"28"},"no-unused-vars","'skipKey' is defined but never used.","Identifier","unusedVar","'params' is assigned a value but never used.","'asd' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'request'. Either include it or remove the dependency array.","ArrayExpression",["29"],{"desc":"30","fix":"31"},"Update the dependencies array to be: [request]",{"range":"32","text":"33"},[727,729],"[request]"]